MUVI

Muvi is a IMDB clone.
You can search for a movie and view details of the move, add movie/s to your movie list, leave comments about a movie and follow other users(future).


TMDB SETUP:
===============================================================
API Key (v3 auth)
2c7ac09213443b720c7abaa7b2c0ec29
eg. https://api.themoviedb.org/3/movie/550?api_key=2c7ac09213443b720c7abaa7b2c0ec29

API READ ACCESS TOKEN (v4 auth)
eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYzdhYzA5MjEzNDQzYjcyMGM3YWJhYTdiMmMwZWMyOSIsInN1YiI6IjVlNmI0MTNmMmYzYjE3MDAxOTQxYjVjYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-Md7AkVhleye2saQU7rtZMGk1OMAhPZyL73Eb6I_ihg
===============================================================


MUVI DB TABLES:-

USER:
- username          string
- password_digest   string
- about             string
- profile_picture   string

has_many :user_movies
has_many :movies, through: :user_movies
validates :username, uniqueness: true


USER_MOVIES:
- user_id       integer
- movie_id      integer

belongs_to :user
belongs_to :movie


MOVIE:
- popularity    float
- vote_count    integer
- video         boolean
- poster_path   string
- homepage      string
- tmdb_id       integer
- imdb_id       integer
- backdrop_path string
- original_title string
- movie_genre   integer
- vote_average  float
- overview      string
- release_date  integer
- runtime       integer

has_many :user_movies
has_many :users, through: :user_movies
has_many :movie_genres
has_many :genres, through: :movie_genres
has_many :comments


GENRE:
- name          string
- genre_api_id  integer

has_many :movie_genres
has_many :movies, through: :movie_genres


MOVIE_GENRES
- movie_id      integer
- genre_id      integer

belongs_to :movie
belongs_to :genre


COMMENTS
- username      string
- user_id       integer
- movie_id      integer
- content       string
- rating        integer
- movie_title   string

belongs_to :movie

=================================================================
FUTURE:
FOLLOWING
FOLLOWERS
POSTS


WHAT WILL YOU KEEP TRACK OF IN YOUR REDUX STORE?



WILL YOU NEED LOCAL STATE IN ANY OF YOUR COMPONENTS?




STORY:
User wants to search for an action movie. User views found movie and wants to leave a comment and also like the movie.

Experience:
User is able to search and select a movie from the search results.
User is able to view more details of the movie.
User can comment, like or dislike a movie, only if they have an account.
User is able to view their profile and see movies they have commented on and liked or disliked.
